pipeline {
    agent {
        label 'slave1'
    }
environment{
    jmeterPath = 'JMT/bin'
}

parameters {
  string defaultValue: '0', description: 'TS1-Baseline test threads', name: 'B1_THREADS'
  string defaultValue: '0', description: 'TS2-Baseline test threads', name: 'B2_THREADS'
  string defaultValue: '0', description: 'TS2-Load test threads', name: 'L2_THREADS'
  string defaultValue: '0', description: 'TS4-Baseline test threads', name: 'B4_THREADS'
  string defaultValue: '1', description: 'Rampup', name: 'RAMPUP'
  string defaultValue: '1', description: 'Loops', name: 'LOOP'
  string defaultValue: '60', description: 'Duration', name: 'DURATION'
  choice choices: ['BaselineTest', 'LoadTest', 'SoakTest'], description: 'Test Types that are executed', name: 'Environment_TestType'
  choice choices: ['Windows', 'Linux'], description: 'Type of OS', name: 'OC_Type'
    
}
options {
 	disableConcurrentBuilds()
 	// only keep 5 builds to prevent disk usage from growing out of control
  buildDiscarder(
    logRotator(
      artifactDaysToKeepStr: '', 
      artifactNumToKeepStr: '', 
      daysToKeepStr: '', 
      numToKeepStr: '5',
    ),
  )
 	}

    stages {
      stage('Run JMeter Test') {
            steps {
                cleanWs()
                dir("${WORKSPACE}@tmp") {
                deleteDir()
                }
                checkout scm
                // checkout([$class: 'GitSCM', branches: [[name: '*/main']],
    // userRemoteConfigs: [[url: 'https://github.com/Gal1af/JMT.git']]])
               // dir('JMT'){
               // git credentialsId: 'GITID', url: "https://github.com/Gal1af/JMT.git", branch: 'main'
               // }
                 echo 'Go to jmeter folder'
                 dir(jmeterPath){
                    echo 'Run jmeter script'
                    sh "mkdir -p ${WORKSPACE}/${BUILD_NUMBER}/ExecutionReport"
                    sh """java -jar ApacheJMeter.jar -JB1_threads=${B1_THREADS} -JB2_threads=${B2_THREADS} -JLs2_threads=${L2_THREADS} -JB4_threads=${B4_THREADS} -Jrampup=${RAMPUP} -Jloop=${LOOP} -Jduration=${DURATION}  -n -t "TestScript.jmx" -l "${WORKSPACE}/${BUILD_NUMBER}/Report/${BUILD_NUMBER}.csv" -e -o "${WORKSPACE}/${BUILD_NUMBER}/ExecutionReport" """
                 }
            }
        }
        
    }
    
post {
        success {
            // perfReport '${BUILD_NUMBER}\\Report\\${BUILD_NUMBER}.csv'
        // Archive the built artifacts
            archiveArtifacts artifacts: '**\\Report\\*.csv, ExecutionReport\\*.html '
          // publish html
            publishHTML target: [
              allowMissing: true,
              alwaysLinkToLastBuild: true,
              keepAll: true,
              reportDir: '${BUILD_NUMBER}\\ExecutionReport\\',
              reportFiles: 'index.html',
              reportName: 'RCov Report'
            ]
            }
}

}
